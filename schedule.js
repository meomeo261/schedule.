const admin = require('firebase-admin');
const sgMail = require('@sendgrid/mail');
const cron = require('node-cron');
require('dotenv').config(); // Load bi·∫øn m√¥i tr∆∞·ªùng t·ª´ .env

// === Kh·ªüi t·∫°o Firebase Admin ===
const serviceAccount = JSON.parse(process.env.FIREBASE_SERVICE_ACCOUNT);
admin.initializeApp({
  credential: admin.credential.cert(serviceAccount),
  databaseURL: 'https://rfid-8555d-default-rtdb.asia-southeast1.firebasedatabase.app',
});


// === C·∫•u h√¨nh SendGrid ===
const SENDGRID_API_KEY = process.env.SENDGRID_API_KEY;
if (!SENDGRID_API_KEY) {
  console.error("‚ùå Thi·∫øu bi·∫øn m√¥i tr∆∞·ªùng SENDGRID_API_KEY trong file .env");
  process.exit(1);
}
sgMail.setApiKey(SENDGRID_API_KEY);

// === H√†m g·ª≠i email l·ªãch h·ªçc ===
async function checkTodaySchedule() {
  const today = new Date();
  const weekday = today.toLocaleString('en-US', { weekday: 'long' }).toLowerCase();
  console.log(`[CHECK] Ki·ªÉm tra l·ªãch h·ªçc h√¥m nay: ${weekday}`);

  try {
    const classesRef = admin.database().ref('class');
    const snapshot = await classesRef.once('value');
    const classes = snapshot.val() || {};
    let hasClassToday = false;

    for (let classId in classes) {
      const cls = classes[classId];
      const classDay = cls.day?.toLowerCase();

      if (classDay === weekday) {
        hasClassToday = true;
        console.log(`üìö L·ªõp ${classId} c√≥ l·ªãch h·ªçc h√¥m nay`);

        const students = cls.studentinclass || {};
        for (let studentId in students) {
          const student = students[studentId];
          const email = student.Gmail || null;
          const name = student['Ho Ten'] || "b·∫°n sinh vi√™n";
          const classCode = cls.code || classId;
          const room = cls.room || "Kh√¥ng r√µ";

          if (!email) {
            console.warn(`‚ö†Ô∏è B·ªè qua sinh vi√™n kh√¥ng c√≥ email: ${name}`);
            continue;
          }

          const msg = {
            to: email,
            from: 'dn2612003@gmail.com', // ‚úÖ ƒê·∫£m b·∫£o email n√†y ƒë√£ x√°c minh trong SendGrid
            subject: `üì¢ Nh·∫Øc l·ªãch h·ªçc h√¥m nay (${cls.day.toUpperCase()})`,
            html: `<p>Ch√†o ${name},</p>
                   <p>B·∫°n c√≥ l·ªõp <strong>${classCode}</strong> h√¥m nay t·∫°i ph√≤ng <strong>${room}</strong>.</p>
                   <p>Vui l√≤ng ƒë·∫øn ƒë√∫ng gi·ªù ƒë·ªÉ ƒëi·ªÉm danh.</p>`,
          };

          try {
            await sgMail.send(msg);
            console.log(`‚úÖ ƒê√£ g·ª≠i email cho ${name} (${email})`);
          } catch (err) {
            console.error(`‚ùå L·ªói g·ª≠i email ƒë·∫øn ${email}: ${err.message}`);
          }
        }
      }
    }

    if (!hasClassToday) {
      console.log(`üì≠ Kh√¥ng c√≥ l·ªõp h·ªçc n√†o h√¥m nay (${weekday})`);
    }

  } catch (err) {
    console.error("‚ùå L·ªói khi truy v·∫•n d·ªØ li·ªáu t·ª´ Firebase:", err.message);
  }
}

// === Cron job ch·∫°y 7:00 s√°ng m·ªói ng√†y ===
cron.schedule('0 7 * * *', () => {
  console.log("‚è∞ ƒêang ch·∫°y cron job l√∫c 7:00 s√°ng...");
  checkTodaySchedule();
});

// === Ch·∫°y ngay khi kh·ªüi ƒë·ªông ƒë·ªÉ test (ch·ªâ c·∫ßn local) ===
(async () => {
  await checkTodaySchedule();
})();
